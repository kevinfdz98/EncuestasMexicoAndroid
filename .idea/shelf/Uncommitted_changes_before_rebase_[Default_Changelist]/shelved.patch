Index: app/src/main/java/com/example/encuestasmexicoandroid/ActivityMostrarPreguntas.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.encuestasmexicoandroid;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.provider.ContactsContract;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.encuestasmexicoandroid.Adapters.MostrarPreguntasAdapter;\r\nimport com.example.encuestasmexicoandroid.Classes.Pregunta;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class ActivityMostrarPreguntas extends AppCompatActivity implements MostrarPreguntasAdapter.onRecyclerClickListener, dialog_response.dialogResponseListener{\r\n\r\n    // Variable of firestore to access data from firebase\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    // Reference to User data on firebase\r\n    private final CollectionReference formRef = db.collection(\"Formularios\");\r\n    private final CollectionReference listasRef = db.collection(\"Listas\");\r\n\r\n    private RecyclerView recyclerView;\r\n    private MostrarPreguntasAdapter mostrarPreguntasAdapter;\r\n    private List<Pregunta> preguntaList;\r\n    private String TAG = \"display\";\r\n    private String formID;\r\n    private String nombre;\r\n    private int NumberofQuestions = 0;\r\n    private DocumentReference documentReference ;\r\n    List<String> listaDeRespuestas;\r\n    Button guardarRespuesta;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_mostrar_preguntas);\r\n        recyclerView = findViewById(R.id.recycler_view_preguntas);\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n        preguntaList = new ArrayList<>();\r\n        guardarRespuesta = findViewById(R.id.Button_GUARDAR_RESPUESTAS_ENCUESTADOR);\r\n        Intent intent = getIntent();\r\n        formID = intent.getStringExtra(\"formID\");\r\n        nombre = intent.getStringExtra(\"NOMBRE\");\r\n        documentReference = formRef.document(formID);\r\n        displayQuestions(documentReference);\r\n        guardarRespuesta.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                prepareObject();\r\n                Toast.makeText(getApplicationContext(), \"Respuestas guardadas correctamente\", Toast.LENGTH_SHORT).show();\r\n                finish();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void displayQuestions(DocumentReference documentReference){\r\n        preguntaList.clear();\r\n        documentReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    DocumentSnapshot document = task.getResult();\r\n                    if (document.exists()) {\r\n                        Map<String,Object> auxMap = (Map<String, Object>) document.get(\"preguntas\");\r\n                        NumberofQuestions =  auxMap.size();\r\n                        Map<String,String> auxQuestion;\r\n                        for (Map.Entry<String, Object> entry : auxMap.entrySet()){\r\n                            auxQuestion = (Map<String, String>) entry.getValue();\r\n                            String textoPregunta = auxQuestion.get(\"textoPregunta\");\r\n                            String tipoPregunta = auxQuestion.get(\"tipoPregunta\");\r\n                            if (tipoPregunta.equals(\"Opción Múltiple\")){\r\n                                String respuestas = auxQuestion.get(\"listaRespuesta\");\r\n                                Pregunta pregunta =  new Pregunta(entry.getKey(),textoPregunta,tipoPregunta);\r\n                                pregunta.setListaRespuesta(respuestas);\r\n                                preguntaList.add(pregunta);\r\n                            }else{\r\n                                preguntaList.add(new Pregunta(entry.getKey(),textoPregunta,tipoPregunta));\r\n                            }\r\n                        }\r\n                        Collections.sort(preguntaList, new Comparator<Pregunta>() {\r\n                            @Override\r\n                            public int compare(Pregunta pregunta, Pregunta t1) {\r\n                                return pregunta.getPreguntaID().compareTo(t1.getPreguntaID());\r\n                            }\r\n                        });\r\n                        initAdapaterRecycler();\r\n                    } else {\r\n                        Log.d(TAG, \"No such document\");\r\n                    }\r\n                } else {\r\n                    Log.d(TAG, \"get failed with \", task.getException());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void prepareObject(){\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"dd-MM-yyy hh:mm:ss\", Locale.getDefault());\r\n        String currentDateandTime = sdf.format(new Date());\r\n        Map<String, Object> question = new HashMap<>();\r\n        question.put(\"fechaEncuesta\", currentDateandTime);\r\n        for(Pregunta pregunta : preguntaList){\r\n            Map<String, String> response = new HashMap<>();\r\n            response.put(\"pregunta\", pregunta.getTextoPregunta());\r\n            response.put(\"respuesta\", pregunta.getRespuesta());\r\n            question.put(pregunta.getPreguntaID(), response);\r\n        }\r\n        CollectionReference RespuestasRef = db.collection(\"Respuestas\");\r\n        RespuestasRef.document(formID).collection(nombre).document().set(question);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        displayQuestions(documentReference);\r\n\r\n    }\r\n\r\n    public void  initAdapaterRecycler(){\r\n        mostrarPreguntasAdapter = new MostrarPreguntasAdapter(this, preguntaList, this);\r\n        recyclerView.setAdapter(mostrarPreguntasAdapter);\r\n    }\r\n\r\n    @Override\r\n    public void onPreguntaClick(int position) {\r\n        Pregunta pregunta = preguntaList.get(position);\r\n        String idPregunta = pregunta.getPreguntaID();\r\n        String tipo = pregunta.getTipoPregunta();\r\n        String texto = pregunta.getTextoPregunta();\r\n        if(tipo.equals(\"Opción Múltiple\")){\r\n            String lista = pregunta.getListaRespuesta();\r\n            openDialog(idPregunta,texto,tipo,lista, position);\r\n        }else{\r\n            openDialog(idPregunta,texto, tipo, \"\", position);\r\n        }\r\n\r\n    }\r\n\r\n    public void openDialog(String preguntaID, String texto, String tipo, String lista, int position){\r\n        dialog_response response = new dialog_response();\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(\"texto\", texto);\r\n        bundle.putString(\"tipo\", tipo);\r\n        bundle.putString(\"lista\", lista);\r\n        bundle.putString(\"idPregunta\", preguntaID);\r\n        bundle.putInt(\"position\", position);\r\n        response.setArguments(bundle);\r\n        response.show(getSupportFragmentManager(), \"Get response\");\r\n    }\r\n\r\n    @Override\r\n    public void applyAnswer(String idPregunta ,String response, String texto, String tipo,int Position) {\r\n        // Here you add the answer to the questions object\r\n        Log.d(TAG, response + idPregunta + texto + tipo + Position);\r\n        Pregunta respuestaPregunta = new Pregunta(idPregunta, texto, tipo);\r\n        respuestaPregunta.setRespuesta(response);\r\n        preguntaList.set(Position, respuestaPregunta);\r\n        Log.d(TAG, preguntaList.get(Position).getRespuesta());\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/encuestasmexicoandroid/ActivityMostrarPreguntas.java	(revision d0b743ba7d810316ab03b9810aec7bba0d3e8780)
+++ app/src/main/java/com/example/encuestasmexicoandroid/ActivityMostrarPreguntas.java	(date 1606251829349)
@@ -52,7 +52,9 @@
     private String nombre;
     private int NumberofQuestions = 0;
     private DocumentReference documentReference ;
+    private boolean contesto = false;
     List<String> listaDeRespuestas;
+    private List<Boolean> booleanList;
     Button guardarRespuesta;
 
     @Override
@@ -63,6 +65,7 @@
         recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
         preguntaList = new ArrayList<>();
+        booleanList = new ArrayList<>();
         guardarRespuesta = findViewById(R.id.Button_GUARDAR_RESPUESTAS_ENCUESTADOR);
         Intent intent = getIntent();
         formID = intent.getStringExtra("formID");
@@ -184,6 +187,8 @@
         respuestaPregunta.setRespuesta(response);
         preguntaList.set(Position, respuestaPregunta);
         Log.d(TAG, preguntaList.get(Position).getRespuesta());
+        contesto = true;
+        initAdapaterRecycler();
     }
 
 
Index: app/src/main/java/com/example/encuestasmexicoandroid/Adapters/MostrarPreguntasAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.encuestasmexicoandroid.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.encuestasmexicoandroid.Classes.Pregunta;\r\nimport com.example.encuestasmexicoandroid.R;\r\n\r\nimport java.util.List;\r\n\r\npublic class MostrarPreguntasAdapter extends RecyclerView.Adapter<MostrarPreguntasAdapter.mostrarPreguntasHolder> {\r\n\r\n    private Context mContext;\r\n    private List<Pregunta> mPreguntaList;\r\n    private onRecyclerClickListener mOnRecyclerListener;\r\n\r\n    public MostrarPreguntasAdapter(Context context, List<Pregunta> preguntas, onRecyclerClickListener onRecyclerCLickListener) {\r\n        mContext = context;\r\n        mPreguntaList = preguntas;\r\n        mOnRecyclerListener = onRecyclerCLickListener;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public mostrarPreguntasHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(mContext)\r\n                .inflate(R.layout.pregunta_item_2, parent, false);\r\n        return new mostrarPreguntasHolder(view, mOnRecyclerListener);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull mostrarPreguntasHolder holder, int position) {\r\n        Pregunta pregunta = mPreguntaList.get(position);\r\n        String preguntaTexto = pregunta.getTextoPregunta();\r\n\r\n        holder.pregunta_texto.setText(preguntaTexto);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return  mPreguntaList.size();\r\n    }\r\n\r\n    public class mostrarPreguntasHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\r\n        public TextView pregunta_texto;\r\n        onRecyclerClickListener onRecyclerClickListener;\r\n\r\n        public mostrarPreguntasHolder(@NonNull View itemview, onRecyclerClickListener onRecyclerClickListener) {\r\n            super(itemview);\r\n            pregunta_texto = itemview.findViewById(R.id.pregunta_text);\r\n            this.onRecyclerClickListener = onRecyclerClickListener;\r\n            itemview.setOnClickListener(this);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            onRecyclerClickListener.onPreguntaClick(getAdapterPosition());\r\n        }\r\n    }\r\n\r\n    public interface onRecyclerClickListener {\r\n        void onPreguntaClick(int position);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/encuestasmexicoandroid/Adapters/MostrarPreguntasAdapter.java	(revision d0b743ba7d810316ab03b9810aec7bba0d3e8780)
+++ app/src/main/java/com/example/encuestasmexicoandroid/Adapters/MostrarPreguntasAdapter.java	(date 1606251894691)
@@ -19,11 +19,13 @@
     private Context mContext;
     private List<Pregunta> mPreguntaList;
     private onRecyclerClickListener mOnRecyclerListener;
+    private boolean mContesto;
 
-    public MostrarPreguntasAdapter(Context context, List<Pregunta> preguntas, onRecyclerClickListener onRecyclerCLickListener) {
+    public MostrarPreguntasAdapter(Context context, List<Pregunta> preguntas, onRecyclerClickListener onRecyclerCLickListener, boolean contesto) {
         mContext = context;
         mPreguntaList = preguntas;
         mOnRecyclerListener = onRecyclerCLickListener;
+        mConte = contesto;
     }
 
     @NonNull
@@ -40,6 +42,9 @@
         String preguntaTexto = pregunta.getTextoPregunta();
 
         holder.pregunta_texto.setText(preguntaTexto);
+        if (contesto) {
+            holder.pregunta_texto.setTextColor();
+        }
     }
 
     @Override
